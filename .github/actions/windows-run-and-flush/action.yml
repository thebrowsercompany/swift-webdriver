name: "Run a command and flush stdout"
description: "Helper to flush the stdout buffer in case a command ends abruptly."

inputs:
  cmd-exec:
    description: Command to execute
    required: true
  cmd-args:
    description: Arguments to the command line
    required: false
    default: ""
  working-directory:
    required: false
    default: ${{ github.workspace }}

runs:
  using: "composite"
  steps:
    - name: Run
      working-directory: ${{ inputs.working-directory }}
      shell: pwsh
      run: |
        $process = [System.Diagnostics.Process]::new()
        $process.StartInfo.FileName = '${{ inputs.cmd-exec }}'
        $process.StartInfo.Arguments = '${{ inputs.cmd-args }}'
        $process.StartInfo.CreateNoWindow = $true
        if (-not $process.Start()) {
          Write-Error "Failed to start process ${{ inputs.cmd-exec }} ${{ inputs.cmd-args }}"
          exit 1
        }

        $process.WaitForExit()
        Write-Output "Process returned $($process.ExitCode)"
        [Console]::Out.Flush()
        exit $process.ExitCode
